// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL_HEROKU")
  //url      = env("DATABASE_URL_LOCAL")
  shadowDatabaseUrl = env("DATABASE_URL_LOCAL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  address       String?
  city          String?
  country       String?
  phoneNumber   String?
  role          Role      @default(USER)
  carts         Cart[]
  orders        Order[]
}

enum Role {
  USER
  ADMIN
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String?
  slug         String?    @unique
  description  String?
  published    Boolean    @default(true)
  stockCount   Int        @default(0)
  categories   Category[]
  mainPhotoUrl String?
  available    Boolean    @default(false)
  cartItems    CartItem[]
}

model Category {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String?
  products  Product[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int      @unique
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int      @default(1)
  cartId    Int      @unique
  cart      Cart     @relation(fields: [cartId], references: [id])
  Orders    Order[]
}

model Order {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    String     @default("NEW_ORDER")
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  CartItems CartItem[]
}
